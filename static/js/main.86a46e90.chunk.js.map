{"version":3,"sources":["api/Movie.js","components/MovieContext.js","components/Movie.js","components/Search.js","components/MovieList.js","components/Nav.js","components/DetailMovie.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","BASE_URL","GET","a","fetch","response","json","datas","SINGLE","ID","data","SEARCH","QUERY","NEXT_PAGE","PAGE","undefined","PREV_PAGE","MovieContext","createContext","MovieProvider","props","useState","isLoading","setLoading","setDatas","search","setSearch","getDatas","useEffect","Provider","value","children","Movie","movie","to","id","className","poster_path","src","alt","title","Search","useContext","searchMovies","e","preventDefault","reset","onSubmit","type","name","placeholder","onChange","target","required","onClick","MovieList","PrevPage","page","NextPage","role","total_results","key","total_pages","disabled","results","map","Nav","DetailMovie","match","IMAGE_URL","genres","production_companies","production_countries","spoken_languages","setMovie","getMovie","params","banner","backgroundImage","backdrop_path","width","height","backgroundSize","releaseDate","Date","release_date","toString","style","status","runtime","overview","length","genre","production_company","production_country","spoken_language","Home","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86a46e90.chunk.js","sourcesContent":["const API_KEY = '22f64047628952782f5bfe42dd718a65'\r\nconst BASE_URL = 'https://api.themoviedb.org/3'\r\n\r\nexport const GET = async () => {\r\n    const response = await fetch(`${BASE_URL}/discover/movie?api_key=${API_KEY}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const SINGLE = async (ID) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${ID}?api_key=${API_KEY}`)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport const SEARCH = async (QUERY) => {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const NEXT_PAGE = async (PAGE,QUERY) => {\r\n    if(QUERY !== undefined){\r\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}&page=${PAGE+1}`)\r\n        const datas = await response.json()\r\n        return datas\r\n    }\r\n\r\n    const response = await fetch(`${BASE_URL}/discover/movie?api_key=${API_KEY}&page=${PAGE+1}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const PREV_PAGE = async (PAGE,QUERY) => {\r\n    if(QUERY !== undefined){\r\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}&page=${PAGE-1}`)\r\n        const datas = await response.json()\r\n        return datas\r\n    }\r\n\r\n    const response = await fetch(`${BASE_URL}/discover/movie?api_key=${API_KEY}&page=${PAGE-1}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}","import React,{createContext,useState,useEffect} from 'react'\r\nimport {GET} from '../api/Movie'\r\n\r\nexport const MovieContext = createContext()\r\n\r\nexport const MovieProvider = (props) => { \r\n    const [isLoading,setLoading] = useState(true)\r\n    const [datas,setDatas] = useState()\r\n    const [search,setSearch] = useState('')\r\n\r\n    const getDatas = async () => {\r\n        setDatas(await GET())\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDatas()\r\n    },[])\r\n\r\n    return(\r\n        <MovieContext.Provider value={[datas,setDatas,isLoading,setLoading,search,setSearch]}>\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/original' \r\n\r\nconst Movie = ({movie}) =>{\r\n    return (\r\n        <Link to={`/react.movie/movie/${movie.id}`} className=\"col-lg-3 mt-3\">\r\n            <div className=\"card\">\r\n                {(movie.poster_path === null) ? '' : (\r\n                    <img src={IMAGE_URL+movie.poster_path} className=\"card-img-top\" alt={movie.title}/>\r\n                )}\r\n                <div className=\"card-body\">\r\n                    <h5>{movie.title}</h5>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Movie","import React,{useContext} from 'react'\r\nimport {MovieContext} from './MovieContext'\r\nimport {SEARCH,GET} from '../api/Movie'\r\n\r\nconst Search = () =>{\r\n    const [datas,setDatas,isLoading,setLoading,search,setSearch] = useContext(MovieContext)\r\n\r\n    const updateSearch = (e) => {\r\n        setSearch(e.target.value)   \r\n    }\r\n\r\n    const searchMovies =  async (e) => {\r\n        await e.preventDefault()\r\n        setLoading(true)\r\n        setDatas(await SEARCH(search))\r\n        setLoading(false)\r\n    }\r\n\r\n    const reset = async () => {\r\n        setSearch('')\r\n        setLoading(true)\r\n        setDatas(await GET())\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={searchMovies} className=\"d-flex justify-content-between\">    \r\n            <div className=\"input-group col-lg-6\">\r\n                <input type=\"text\" name=\"search\" className=\"form-control\" placeholder=\"title\" value={search} onChange={updateSearch} required/>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn btn-success\">Search</button>\r\n                <button className=\"btn btn-info\" type=\"button\" onClick={reset} >Reset</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search","import React,{useContext} from 'react'\r\nimport {MovieContext} from './MovieContext'\r\nimport {NEXT_PAGE,PREV_PAGE} from '../api/Movie'\r\nimport Movie from './Movie'\r\nimport Search from './Search'\r\n\r\nconst MovieList = () =>{\r\n    const [datas,setDatas,isLoading,setLoading,search] = useContext(MovieContext)\r\n    \r\n    const PrevPage = async () => {\r\n        setLoading(true)\r\n        if(search !== ''){\r\n            setDatas(await PREV_PAGE(datas.page,search))\r\n        }else{\r\n            setDatas(await PREV_PAGE(datas.page))\r\n        } \r\n        setLoading(false)\r\n    }\r\n\r\n    const NextPage = async () => {\r\n        setLoading(true)\r\n        if(search !== ''){\r\n            setDatas(await NEXT_PAGE(datas.page,search))\r\n        }else{\r\n            setDatas(await NEXT_PAGE(datas.page))\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row pt-5\">\r\n                <div className=\"col-lg-12\">\r\n                    <Search />\r\n                </div>\r\n            </div>\r\n            <div className=\"row py-5\">\r\n                {\r\n                (isLoading) ? (\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-lg-12 text-center\">\r\n                                <div className=\"spinner-border text-info\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )    :\r\n                \r\n                (datas.total_results > 0) ?    \r\n                [\r\n                    (\r\n                        <div className=\"container\" key='App'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <h2>Results : {datas.total_results}</h2>\r\n                                    <h2>Total Pages : {datas.total_pages}</h2>\r\n                                </div>\r\n                                <div className=\"col-lg-6 btn-group\">\r\n                                    <button className=\"btn btn-outline-info\" onClick={PrevPage} disabled={`${(datas.page === 1) ? 'disable' : ''}`} >Previous Page</button>\r\n                                    <button className=\"btn btn-info\" disabled>{datas.page}</button>\r\n                                    <button className=\"btn btn-outline-info\" onClick={NextPage} disabled={`${(datas.page === datas.total_pages) ? 'disable' : ''}`}>Next Page</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ),\r\n\r\n                    datas.results.map(movie => (\r\n                        <Movie  movie={movie} key={movie.id} />\r\n                    ))\r\n                ]\r\n\r\n                : (\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-lg-12 text-center\">\r\n                                <h2>Data not found</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <nav className=\"navbar navbar-dark navbar-expand bg-dark\">\r\n            <div className=\"container\">\r\n                <Link to=\"/react.movie/\" className=\"navbar-brand\">\r\n                    App\r\n                </Link>\r\n                <ul className=\"ml-auto navbar-nav\">\r\n                    <Link to=\"/react.movie/movie\" className=\"nav-item nav-link\">\r\n                        <li>Movies</li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React,{useState,useEffect} from 'react'\r\nimport {SINGLE} from '../api/Movie'\r\n\r\nconst DetailMovie = ({match}) =>{\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/original'  \r\n    const [movie,setMovie] = useState({\r\n        genres:[],\r\n        production_companies:[],\r\n        production_countries:[],\r\n        spoken_languages:[]\r\n    })\r\n    const [isLoading,setLoading] = useState(true)\r\n\r\n    const getMovie = async () =>{\r\n        setMovie(await SINGLE(match.params.id))\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMovie()\r\n    },[])\r\n\r\n    const banner = {\r\n        backgroundImage:'url('+IMAGE_URL+movie.backdrop_path+')',\r\n        width:'100%',\r\n        height:'500px',\r\n        backgroundSize:'cover'\r\n    }\r\n\r\n    const releaseDate = new Date(movie.release_date)\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-lg-12 text-center\">\r\n                        <div className=\"spinner-border text-info\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 text-center bg-info\">\r\n                    <h5>{releaseDate.toString()}</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\" style={banner}></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container detail\">\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-lg-3\">\r\n                    <div className=\"card\">\r\n                        <img src={IMAGE_URL+movie.poster_path} alt={movie.title} className=\"card-img-top\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-9 mt-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <span className={`badge ${movie.status === 'Released' ? 'badge-success' : 'badge-info' }`}>{movie.status}</span>\r\n                            \r\n                            <h2>{movie.title} <span className=\"badge badge-info\">{movie.runtime} minutes</span></h2>\r\n                            <p>{movie.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6 my-5\">\r\n                    <h3>Genres</h3>\r\n                    {\r\n                    (movie.genres.length === 0) ? '-' : (\r\n                        movie.genres.map(genre => (\r\n                            <span className=\"badge badge-success mr-3\" key={genre.id}>{genre.name}</span>\r\n                        )))\r\n                    }\r\n                </div>\r\n                <div className=\"col-lg-6 my-5\">\r\n                    <h3>Production Companies</h3>\r\n                    {\r\n                        (movie.production_companies.length === 0) ? '-' : (\r\n                        movie.production_companies.map(production_company => (\r\n                            <span className=\"badge badge-info mr-3\" key={production_company.id}>{production_company.name}</span>\r\n                        )))\r\n                    }\r\n                </div>\r\n                <div className=\"col-lg-6 my-5\">\r\n                    <h3>Production Countries</h3>\r\n                    {\r\n                        (movie.production_countries.length === 0) ? '-' : (\r\n                            movie.production_countries.map(production_country => (\r\n                                <span className=\"badge badge-warning mr-3\" key={production_country.name}>{production_country.name}</span>\r\n                            ))\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"col-lg-6 my-5\">\r\n                    <h3>Spoken Languages</h3>\r\n                    {\r\n                        (movie.spoken_languages.length === 0) ? '-' : (\r\n                            movie.spoken_languages.map(spoken_language => (\r\n                                <span className=\"badge badge-danger mr-3\" key={spoken_language.name}>{spoken_language.name}</span>\r\n                            ))\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailMovie","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div className=\"d-flex align-items-center justify-content-center\" style={{height:'50vh'}}>\r\n            <div className=\"text-center\">\r\n                <h2>Welcome to Simple React App Movie</h2>\r\n                <Link to='/react.movie/movie'>\r\n                    <p className=\"btn btn-outline-info\">Go to movies</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\nimport MovieList from './components/MovieList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport {MovieProvider} from './components/MovieContext'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Nav from './components/Nav'\nimport DetailMovie from './components/DetailMovie'\nimport Home from './components/Home'\n\nconst App = () => {\n  return (\n    <MovieProvider>\n      <Router>\n          <Nav />\n          <Switch>\n            <Route path=\"/react.movie/\" exact component={Home}/>\n            <Route path=\"/react.movie/movie\" exact component={MovieList} />\n            <Route path=\"/react.movie/movie/:id\" exact component={DetailMovie} />\n          </Switch>\n      </Router>\n    </MovieProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}