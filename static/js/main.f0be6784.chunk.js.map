{"version":3,"sources":["api/Movie.js","components/MovieContext.js","components/Movie.js","components/MovieList.js","components/Nav.js","components/Cast.js","components/Crew.js","components/DetailMovie.js","components/MovieBanner.js","components/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","BASE_URL","GET","TYPE","a","fetch","response","json","datas","SINGLE","ID","data","SEARCH","QUERY","NEXT_PAGE","PAGE","undefined","PREV_PAGE","GET_GENRES","MovieContext","createContext","MovieProvider","props","useState","isLoading","setLoading","setDatas","search","setSearch","curr","setCurr","getDatas","value","useEffect","Provider","children","Movie","movie","carousel","card","backgroundImage","poster_path","height","backgroundSize","border","fontSize","release_date","split","className","to","id","style","textDecoration","background","vote_average","title","MovieList","useContext","PrevPage","page","NextPage","Popular","NowPlaying","Upcoming","Discover","onClick","total_results","disabled","total_pages","role","results","map","key","withRouter","location","useLocation","setGenres","getGenres","searchMovies","e","preventDefault","data-toggle","data-target","pathname","onSubmit","type","placeholder","onChange","target","Cast","cast","profile_path","name","character","Crew","crew","job","DetailMovie","match","genres","production_companies","production_countries","spoken_languages","setMovie","recommendation","setRecommendation","similar","setSimilar","credits","setCredits","getMovie","params","getCredits","getRecomendation","getSimilar","owl","window","$","document","ready","owlCarousel","loop","responsive","0","items","480","768","1024","src","alt","status","runtime","length","genre","production_company","production_country","spoken_language","overview","result","backdrop_path","position","release","Home","popular","setPopular","nowPlaying","setNowPlaying","getPopular","getNowPlaying","seePopular","seeNowPlaying","bowl","autoplay","autoplayTimeout","MovieBanner","trigger","Footer","jquery","jQuery","App","path","exact","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0be6784.chunk.js","sourcesContent":["const API_KEY = '22f64047628952782f5bfe42dd718a65'\r\nconst BASE_URL = 'https://api.themoviedb.org/3'\r\n\r\nexport const GET = async (TYPE) => {\r\n    const response = await fetch(`${BASE_URL}/${(TYPE === 'discover') ? 'discover/' : ''}movie${(TYPE !== 'discover' ? `/${TYPE}` : '')}?api_key=${API_KEY}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const SINGLE = async (ID,TYPE) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${ID}${TYPE ? `/${TYPE}` : ''}?api_key=${API_KEY}`)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport const SEARCH = async (QUERY) => {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const NEXT_PAGE = async (PAGE,TYPE,QUERY) => {\r\n    if(QUERY !== undefined){\r\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}&page=${PAGE+1}`)\r\n        const datas = await response.json()\r\n        return datas\r\n    }\r\n\r\n    const response = await fetch(`${BASE_URL}/${(TYPE === 'discover') ? TYPE+'/' : ''}movie${(TYPE !== 'discover') ? '/'+TYPE : ''}?api_key=${API_KEY}&page=${PAGE+1}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const PREV_PAGE = async (PAGE,TYPE,QUERY) => {\r\n    if(QUERY !== undefined){\r\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${QUERY}&page=${PAGE-1}`)\r\n        const datas = await response.json()\r\n        return datas\r\n    }\r\n\r\n    const response = await fetch(`${BASE_URL}/${TYPE}/movie?api_key=${API_KEY}&page=${PAGE-1}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}\r\n\r\nexport const GET_GENRES = async () => {\r\n    const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`)\r\n    const datas = await response.json()\r\n    return datas\r\n}","import React,{createContext,useState,useEffect} from 'react'\r\nimport {GET} from '../api/Movie'\r\n\r\nexport const MovieContext = createContext()\r\n\r\nexport const MovieProvider = (props) => { \r\n    const [isLoading,setLoading] = useState(true)\r\n    const [datas,setDatas] = useState()\r\n    const [search,setSearch] = useState('')\r\n    const [curr,setCurr] = useState('discover')\r\n\r\n    const getDatas = async () => {\r\n        setDatas(await GET(curr))\r\n        setLoading(false)\r\n    }\r\n\r\n    const value = [\r\n        datas,setDatas,isLoading,setLoading,search,setSearch,curr,setCurr\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        getDatas()\r\n    },[])\r\n\r\n    return(\r\n        <MovieContext.Provider value={value}>\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/original' \r\n\r\nconst Movie = ({movie,carousel}) =>{\r\n    const card = {\r\n        backgroundImage:`url(${IMAGE_URL+movie.poster_path})`,\r\n        height:'250px',\r\n        backgroundSize:'cover',\r\n        border:'1px solid #ddd',\r\n        fontSize:'14px',\r\n    }\r\n\r\n    const header = {\r\n        background:'linear-gradient(to bottom, #000,#0000)',\r\n        border:'none',\r\n      }\r\n      \r\n    const footer = {\r\n        background:'linear-gradient(to top, #000,#0000)',\r\n        border:'none',\r\n    }\r\n\r\n    const release_date = movie.release_date.split(\"-\")\r\n\r\n    return (\r\n        <div className={`${carousel ? 'col-12' : 'col-lg-2 col-md-3 col-sm-4 col-6 mt-3'}`}>\r\n            <Link to={`/movie/${movie.id}`} style={{textDecoration:'none'}}>\r\n                <div className=\"card d-flex justify-content-between text-light card-movie\" style={card}>\r\n                    <div className=\"card-header\" style={header}>\r\n                        <span className=\"text-warning\" > <i className=\"fa fa-star\"></i> {movie.vote_average}</span>\r\n                    </div>\r\n                    <div className=\"card-footer text-center\" style={footer}>\r\n                        <p><b>{movie.title}</b> ({release_date[0]})</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","import React,{useContext,useState} from 'react'\r\nimport {MovieContext} from './MovieContext'\r\nimport {NEXT_PAGE,PREV_PAGE,GET} from '../api/Movie'\r\nimport Movie from './Movie'\r\n\r\nconst MovieList = () =>{\r\n    const [datas,setDatas,isLoading,setLoading,search,setSearch,curr,setCurr] = useContext(MovieContext)\r\n    \r\n    const PrevPage = async () => {\r\n        setLoading(true)\r\n        if(search !== ''){\r\n            setDatas(await PREV_PAGE(datas.page,curr,search))\r\n        }else{\r\n            setDatas(await PREV_PAGE(datas.page,curr))\r\n        } \r\n        setLoading(false)\r\n    }\r\n\r\n    const NextPage = async () => {\r\n        setLoading(true)\r\n        if(search !== ''){\r\n            setDatas(await NEXT_PAGE(datas.page,curr,search))\r\n        }else{\r\n            setDatas(await NEXT_PAGE(datas.page,curr))\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const Popular = async () => {\r\n        setCurr('popular')\r\n        setLoading(true)\r\n        setDatas(await GET('popular'))\r\n        setLoading(false)\r\n    }\r\n\r\n    const NowPlaying = async () => {\r\n        setCurr('now_playing')\r\n        setLoading(true)\r\n        setDatas(await GET('now_playing'))\r\n        setLoading(false)\r\n    }\r\n\r\n    const Upcoming = async () => {\r\n        setCurr('upcoming')\r\n        setLoading(true)\r\n        setDatas(await GET('upcoming'))\r\n        setLoading(false)\r\n    }\r\n\r\n    const Discover = async () => {\r\n        setCurr('discover')\r\n        setLoading(true)\r\n        setDatas(await GET('discover'))\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row p-3\">\r\n                <button className={`btn ${(curr === 'discover') ? 'btn-secondary' : 'btn-outline-secondary'} mr-3 mt-3 mt-md-0`} onClick={Discover}>Discover</button>\r\n                <button className={`btn ${(curr === 'popular') ? 'btn-secondary' : 'btn-outline-secondary'} mr-3 mt-3 mt-md-0`} onClick={Popular}>Popular</button>\r\n                <button className={`btn ${(curr === 'now_playing') ? 'btn-secondary' : 'btn-outline-secondary'} mr-3 mt-3 mt-md-0`} onClick={NowPlaying}>Now Playing</button>\r\n                <button className={`btn ${(curr === 'upcoming') ? 'btn-secondary' : 'btn-outline-secondary'} mr-3 mt-3 mt-md-0`} onClick={Upcoming}>Upcoming</button>\r\n\r\n                {(curr === 'search') ? (\r\n                    <button className=\"btn btn-secondary mr-3 mt-3 mt-md-0\">Total Results : {datas.total_results}</button>\r\n                ):''}\r\n\r\n                <div className=\"btn-group ml-auto col-12 col-md-2 mt-3 mt-md-0\">\r\n                    {(datas && datas.page > 1) ? (\r\n                        <button className=\"btn btn-outline-secondary\" onClick={PrevPage}>&laquo;</button>\r\n                    ) : ''}\r\n                    <button className=\"btn btn-secondary\" disabled>{(datas) ? `${datas.page} of ${datas.total_pages}` : '1'}</button>\r\n                    {\r\n                    (datas && datas.page < datas.total_pages) ? (\r\n                        <button className=\"btn btn-outline-secondary\" onClick={NextPage}>&raquo;</button>\r\n                    ): ''   \r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row pb-3\">\r\n                {\r\n                (isLoading) ? (\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-lg-12 text-center\">\r\n                                <div className=\"spinner-border text-info\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )    :\r\n                \r\n                (datas.total_results > 0) ?(\r\n                    datas.results.map(movie => (\r\n                        <Movie  movie={movie} key={movie.id} />\r\n                    ))\r\n                ): (\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-lg-12 text-center\">\r\n                                <h2>Data not found</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                \r\n                }\r\n\r\n                <div className=\"row\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React,{useEffect,useState,useContext} from 'react'\r\nimport {Link,withRouter,useLocation} from 'react-router-dom'\r\nimport {GET_GENRES} from '../api/Movie'\r\nimport {MovieContext} from './MovieContext'\r\nimport {SEARCH} from '../api/Movie'\r\n\r\nconst Nav = () => {\r\n    const location = useLocation()\r\n    const [genres,setGenres] = useState()\r\n    const [datas,setDatas,isLoading,setLoading,search,setSearch,curr,setCurr] = useContext(MovieContext)\r\n\r\n    const getGenres = async () => {\r\n        setGenres(await GET_GENRES())\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getGenres()\r\n    },[])\r\n\r\n    const updateSearch = (e) => {\r\n        setSearch(e.target.value)   \r\n    }\r\n\r\n    const searchMovies =  async (e) => {\r\n        await e.preventDefault()\r\n        setCurr('search')\r\n        setLoading(true)\r\n        setDatas(await SEARCH(search))\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-dark navbar-expand-md bg-dark sticky-top\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    Movieee\r\n                </Link>\r\n\r\n                <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#collapse\">\r\n                    <i className=\"navbar-toggler-icon\"></i>\r\n                </button>\r\n                <div className=\"navbar-collapse collapse\" id=\"collapse\">\r\n                    <ul className=\"ml-auto navbar-nav\">\r\n                        <Link to=\"/\" className={`nav-item nav-link ${(location.pathname == '' || location.pathname == '/' ) ? 'active' : ''}`}>\r\n                            <li>Home</li>\r\n                        </Link>\r\n                        <Link to=\"/movie\" className={`nav-item nav-link ${(location.pathname == '/movie' || location.pathname == '/movie/') ? 'active' : ''}`}>\r\n                            <li>Movies</li>\r\n                        </Link>\r\n                        {/* <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Genres</a>\r\n                            <div className=\"dropdown-menu dropdown-menu-right\" style={{width:'500px'}}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                    {\r\n                                        (genres) ? \r\n                                            genres.genres.map(genre => (\r\n                                                <div className=\"col-lg-4\" key={genre.id}>\r\n                                                    <a className=\"d-inline-block btn btn-dark w-100 mb-3\" href=\"#\">{genre.name}</a>\r\n                                                </div>\r\n                                            ))\r\n                                            : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </li> */}\r\n                    </ul>\r\n                        <form className=\"form-inline\" onSubmit={searchMovies}>\r\n                            <input className=\"form-control mx-md-2\" type=\"search\" placeholder=\"Search\" value={search} onChange={updateSearch}/>\r\n                            \r\n                                <button className=\"btn btn-secondary my-2\">\r\n                                    <Link to=\"/movie\">\r\n                                        <i className=\"fa fa-search text-light\"></i>\r\n                                    </Link>\r\n                                </button>\r\n                            \r\n                        </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Nav)","import React from 'react'\r\n\r\nconst Cast = ({cast}) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/original' \r\n    const card = {\r\n        backgroundImage:`url(${IMAGE_URL+cast.profile_path})`,\r\n        height:'250px',\r\n        backgroundSize:'cover',\r\n        border:'1px solid #ddd',\r\n        fontSize:'14px',\r\n    }\r\n    const footer = {\r\n        background:'linear-gradient(to top, #000,#0000)',\r\n        border:'none',\r\n    }\r\n    return (\r\n\r\n        <div className=\"col-12\">\r\n            <div className=\"card text-light card-movie\" style={card}>\r\n                <div className=\"card-footer text-center mt-auto\" style={footer}>\r\n                    <p><b>{cast.name}</b> ({cast.character})</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cast","import React from 'react'\r\n\r\nconst Crew = ({crew}) => {\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/original' \r\n    const card = {\r\n        backgroundImage:`url(${IMAGE_URL+crew.profile_path})`,\r\n        height:'250px',\r\n        backgroundSize:'cover',\r\n        border:'1px solid #ddd',\r\n        fontSize:'14px',\r\n    }\r\n    const footer = {\r\n        background:'linear-gradient(to top, #000,#0000)',\r\n        border:'none',\r\n    }\r\n    return (\r\n\r\n        <div className=\"col-12\">\r\n            <div className=\"card text-light card-movie\" style={card}>\r\n                <div className=\"card-footer text-center mt-auto\" style={footer}>\r\n                    <p><b>{crew.name}</b> ({crew.job})</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crew","import React,{useState,useEffect,useContext} from 'react'\r\nimport {SINGLE} from '../api/Movie'\r\nimport Movie from './Movie'\r\nimport Cast from './Cast'\r\nimport Crew from './Crew'\r\nimport {MovieContext} from './MovieContext'\r\n\r\nconst DetailMovie = ({match}) =>{\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/original'  \r\n    const [datas,setDatas,isLoading,setLoading] = useContext(MovieContext)\r\n    const [movie,setMovie] = useState({\r\n        genres:[],\r\n        production_companies:[],\r\n        production_countries:[],\r\n        spoken_languages:[]\r\n    })\r\n    const [recommendation,setRecommendation] = useState()\r\n    const [similar,setSimilar] = useState()\r\n    const [credits,setCredits] = useState()\r\n\r\n    const getMovie = async () =>{\r\n        setLoading(true)\r\n        setMovie(await SINGLE(match.params.id))\r\n        setLoading(false)\r\n    }\r\n\r\n    const getCredits = async () =>{\r\n        setCredits(await SINGLE(match.params.id,'credits'))\r\n    }\r\n\r\n    const getRecomendation = async () => {\r\n        setRecommendation(await SINGLE(match.params.id,'recommendations'))\r\n    }\r\n\r\n    const getSimilar = async () => {\r\n        setSimilar(await SINGLE(match.params.id,'similar'))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMovie()\r\n        getCredits()\r\n        getRecomendation()\r\n        getSimilar()\r\n    },[match.params.id])\r\n    \r\n    var owl = window.$('.owl-carousel')\r\n    window.$(document).ready(()=>{\r\n        owl.owlCarousel({\r\n            loop:true,\r\n            responsive : {\r\n                0 : {\r\n                    items : 2,\r\n                },\r\n                480 : {\r\n                    items : 3,\r\n                },\r\n                768 : {\r\n                    items : 4,\r\n                },\r\n                1024:{\r\n                    items:6\r\n                },\r\n            },\r\n        })\r\n    })  \r\n    \r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-lg-12 text-center\">\r\n                        <div className=\"spinner-border text-info\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"container py-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"card\">\r\n                        <img src={IMAGE_URL+movie.poster_path} alt={movie.title} className=\"card-img-top\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <span className={`badge ${movie.status === 'Released' ? 'badge-success' : 'badge-info' }`}>{movie.status}</span>\r\n                            \r\n                            <h2>{movie.title} <span className=\"badge badge-info\">{movie.runtime} minutes</span></h2>\r\n                            \r\n                            <div className=\"mb-3\">\r\n                                <h5>Genres</h5>\r\n                                {\r\n                                (movie.genres.length < 1) ? '-' : (\r\n                                    movie.genres.map(genre => (\r\n                                        <span className=\"badge badge-primary mr-3\" key={genre.id}>{genre.name}</span>\r\n                                    )))\r\n                                }\r\n                            </div>\r\n                            \r\n                            <div className=\"mb-3\">\r\n                                <h5>Production Companies</h5>\r\n                                {\r\n                                    (movie.production_companies.length < 1) ? '-' : (\r\n                                    movie.production_companies.map(production_company => (\r\n                                        <span className=\"badge badge-info mr-3\" key={production_company.id}>{production_company.name}</span>\r\n                                    )))\r\n                                }\r\n                            </div>\r\n                            \r\n                            <div className=\"mb-3\">\r\n                                <h5>Production Countries</h5>\r\n                                {\r\n                                    (movie.production_countries.length < 1) ? '-' : (\r\n                                        movie.production_countries.map(production_country => (\r\n                                            <span className=\"badge badge-warning mr-3\" key={production_country.name}>{production_country.name}</span>\r\n                                        ))\r\n                                    )\r\n                                }\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <h5>Spoken Languages</h5>\r\n                                {\r\n                                    (movie.spoken_languages.length < 1) ? '-' : (\r\n                                        movie.spoken_languages.map(spoken_language => (\r\n                                            <span className=\"badge badge-danger mr-3\" key={spoken_language.name}>{spoken_language.name}</span>\r\n                                        ))\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row-fluid mt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5>Overview</h5>\r\n                        {(movie.overview) ? movie.overview : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row-fluid mt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5>Cast</h5>\r\n                        <div className=\"row owl-carousel\">\r\n                            {credits ? credits.cast.map(cast=>(\r\n                                <Cast cast={cast} key={cast.id}/>\r\n                            )):''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row-fluid mt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5>Crew</h5>\r\n                        <div className=\"row owl-carousel\">\r\n                            {credits ? credits.crew.map(crew=>(\r\n                                <Crew crew={crew} key={crew.id}/>\r\n                            )):''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row-fluid mt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5>Recommendations</h5>\r\n                        <div className=\"row owl-carousel\">\r\n                            {recommendation ? (\r\n                                recommendation.results.map(result => (\r\n                                    <Movie movie={result} key={result.id} carousel={true}/>\r\n                                ))\r\n                            ) : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {similar ? similar.results.length > 0 ? (\r\n            <div className=\"row-fluid mt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5>Similar Movies</h5>\r\n                        <div className=\"row owl-carousel\">\r\n                            {\r\n                                similar.results.map(result => (\r\n                                    <Movie movie={result} key={result.id} carousel={true}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ):'' : ''}   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailMovie","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/original' \r\n\r\nconst Movie = ({movie}) =>{\r\n    const card = {\r\n        backgroundImage:`url(${IMAGE_URL+movie.backdrop_path})`,\r\n        height:'90vh',\r\n        backgroundSize:'cover',\r\n        position:'relative'\r\n    }\r\n\r\n    const release = movie.release_date.split('-')\r\n\r\n    return (\r\n        <div style={card}>\r\n            <div className=\"bg-banner\"></div>\r\n            <div className=\"banner-content p-5\">\r\n                <h2>{movie.title} ({release[0]})</h2>\r\n                <p>{movie.overview}</p>\r\n                <Link to={`/movie/${movie.id}`} className=\"btn btn-outline-light\">\r\n                    More Detail\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","import React,{useState,useEffect,useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Movie from './Movie'\r\nimport {GET} from '../api/Movie'\r\nimport {MovieContext} from './MovieContext'\r\nimport MovieBanner from './MovieBanner'\r\n\r\nconst Home = () => {\r\n    const [datas,setDatas,isLoading,setLoading,search,setSearch,curr,setCurr] = useContext(MovieContext)\r\n    const [popular,setPopular] = useState()\r\n    const [nowPlaying,setNowPlaying] = useState()\r\n    \r\n    const getPopular = async () => {\r\n        setLoading(true)\r\n        setPopular(await GET('popular'))\r\n        setLoading(false)\r\n    }\r\n\r\n    const getNowPlaying = async () => {\r\n        setLoading(true)\r\n        setNowPlaying(await GET('now_playing'))\r\n        setLoading(false)\r\n    } \r\n    \r\n    const seePopular = async () => {\r\n        setLoading(true)\r\n        setCurr('popular')\r\n        setDatas(await GET('popular'))\r\n        setLoading(false)\r\n    }\r\n    const seeNowPlaying = async () => {\r\n        setLoading(true)\r\n        setCurr('now_playing')\r\n        setDatas(await GET('now_playing'))\r\n        setLoading(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getPopular()\r\n        getNowPlaying()\r\n    },[])\r\n    \r\n    var owl = window.$('.owl-carousel')\r\n    var bowl = window.$('.banner-carousel')\r\n\r\n    const prevItem = () =>{\r\n        bowl.trigger('prev.owl.carousel')\r\n    }\r\n    \r\n    const nextItem = () => {\r\n        bowl.trigger('next.owl.carousel')\r\n    }\r\n\r\n    \r\n    window.$(()=>{\r\n        \r\n        bowl.owlCarousel({\r\n            loop:true,\r\n            items:1,\r\n            autoplay:true,\r\n            autoplayTimeout:5000,\r\n        }) \r\n\r\n        owl.owlCarousel({\r\n            loop:true,\r\n            responsive : {\r\n                0 : {\r\n                    items : 2,\r\n                },\r\n                480 : {\r\n                    items : 3,\r\n                },\r\n                768 : {\r\n                    items : 4,\r\n                },\r\n                1024:{\r\n                    items:6\r\n                }\r\n            },\r\n        })\r\n    })  \r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-lg-12 text-center\">\r\n                        <div className=\"spinner-border text-info\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <> \r\n            <div className=\"w-100\">\r\n                <div className=\"banner-carousel owl-carousel\">\r\n                    {nowPlaying ? (\r\n                        nowPlaying.results.map(movie=>(\r\n                            <MovieBanner key={movie.id} movie={movie}/>\r\n                        ))\r\n                    ) : ''}\r\n                </div>\r\n                <div className=\"btn-group navigator\">\r\n                    <button className=\"btn btn-dark\" onClick={prevItem}><i className=\"fa fa-angle-left\"></i></button>\r\n                    <button className=\"btn btn-dark\" onClick={nextItem}><i className=\"fa fa-angle-right\"></i></button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row-fluid d-flex justify-content-between my-3\">\r\n                    <h4 className=\"text-secondary\">Popular</h4>\r\n                    <Link to='/movie' className=\"btn btn-outline-secondary\" onClick={seePopular}>See More</Link>\r\n                </div>\r\n                <div className=\"row owl-carousel\">\r\n                    {\r\n                    (popular) ?\r\n                        popular.results.map(movie => (\r\n                            <Movie movie={movie} key={movie.id} carousel={true}/>   \r\n                        ))\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n                <div className=\"row-fluid d-flex justify-content-between my-3\">\r\n                    <h4 className=\"text-secondary\">Now Playing</h4>\r\n                    <Link to='/movie' className=\"btn btn-outline-secondary\" onClick={seeNowPlaying}>See More</Link>\r\n                </div>\r\n                <div className=\"row owl-carousel\">\r\n                    {\r\n                    (nowPlaying) ?\r\n                        nowPlaying.results.map(movie => (\r\n                            <Movie movie={movie} key={movie.id} carousel={true}/>   \r\n                        ))\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React,{useContext} from 'react'\r\nimport {MovieContext} from './MovieContext'\r\n\r\nconst Footer = () => {\r\n    const [datas,setDatas,isLoading] = useContext(MovieContext)\r\n    if(!isLoading) {\r\n        return (\r\n            <nav className=\"navbar navbar-dark navbar-expand bg-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"text-secondary py-3\">\r\n                        &copy; Movieee 2020\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }else{\r\n        return ''\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react'\nimport MovieList from './components/MovieList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'owl.carousel/dist/assets/owl.carousel.css'\nimport './App.css'\nimport 'bootstrap'\nimport {MovieProvider} from './components/MovieContext'\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Nav from './components/Nav'\nimport DetailMovie from './components/DetailMovie'\nimport Home from './components/Home'\nimport Footer from './components/Footer'\nimport jquery from 'jquery'\nwindow.$ = jquery;\nwindow.jQuery = jquery;\nwindow.jquery = jquery;\n\nconst App = () => {\n  return (\n    <MovieProvider>\n      <Router>\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/movie\" exact component={MovieList} />\n            <Route path=\"/movie/:id\" exact component={DetailMovie} />\n          </Switch>\n          <Footer />\n      </Router>\n    </MovieProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'owl.carousel'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}